@import url("https://cdn.rawgit.com/moonspam/NanumSquare/master/nanumsquare.css");
@import url("https://fonts.googleapis.com/css?family=Montserrat:100");
/*
    COLOR
*/
/*
    Z-INDEX
*/
/*
    PATH
*/
/*
    FONT-WEIGHT
*/
html {
  font-size: 16px;
}
@media screen and (max-width: 1024px) {
  html {
    font-size: 10.5px;
  }
}
@media screen and (max-width: 450px) {
  html {
    font-size: 8px;
  }
}

:root {
  --app-height: 100%;
}

html,
body {
  width: 100%;
  height: 100vh;
  scroll-behavior: smooth;
  word-break: keep-all;
}

body.-noneScroll {
  min-height: 100vh;
  overflow: hidden;
  touch-action: none;
}

@media screen and (max-width: 1024px) {
  .pc {
    display: none !important;
  }
}

.mo {
  display: none !important;
}
@media screen and (max-width: 1024px) {
  .mo {
    display: flex !important;
  }
}

* {
  margin: 0;
  padding: 0;
  font: inherit;
  color: inherit;
}

*,
:after,
:before {
  box-sizing: border-box;
  flex-shrink: 0;
}

:root {
  -webkit-tap-highlight-color: transparent;
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
       text-size-adjust: 100%;
  cursor: default;
  line-height: 1;
  overflow-wrap: break-word;
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

html {
  height: 100%;
}

ul,
ol,
li {
  list-style-type: none;
}

img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

button {
  background: none;
  border: 0;
  cursor: pointer;
}

a {
  text-decoration: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
}

@font-face {
  font-family: "MBC1961GulimM";
  src: url("https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2304-01@1.0/MBC1961GulimM.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "Pretendard-Regular";
  src: url("https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff") format("woff");
  font-weight: 400;
  font-style: normal;
}
article {
  width: 100%;
  height: 100%;
  margin: 0 auto;
}

.inner {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
}

.intro {
  width: 100%;
  height: 100%;
  background: #0a0a0a;
}
.intro__inner {
  width: 100%;
  max-width: 55vw;
  height: 100%;
  margin: 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
}
.intro__inner .slowcity {
  display: flex;
  width: 100%;
  height: 16vw;
  justify-content: center;
}
.intro__inner .slowcity:hover li span {
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
          clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
}
.intro__inner .slowcity li {
  width: 1.6vw;
  height: 100%;
  display: flex;
  flex-direction: column;
  padding-top: 5vw;
  padding-bottom: 3.3vw;
}
.intro__inner .slowcity li.m-1 {
  margin-right: 1vw;
}
.intro__inner .slowcity li.m-2 {
  margin-right: 1.5vw;
}
.intro__inner .slowcity li span {
  width: 100%;
  background: #fff;
  flex-grow: 1;
  display: block;
  position: relative;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
          clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
  transition: all 0.3s;
}
.intro__inner .slowcity li span::before {
  content: "";
  width: 100%;
  height: 100%;
  background: #fff;
  position: absolute;
  left: 0;
  top: 0;
}
.intro__inner .slowcity li span i {
  width: 100%;
  height: 100%;
  display: block;
  background: #fff;
}
.intro__inner .slowcity li.s span:nth-child(1) {
  height: 1.2vw;
  margin-bottom: 1.3vw;
}
.intro__inner .slowcity li.s2 span:nth-child(2) {
  height: 1.2vw;
  margin-top: 1.3vw;
}
.intro__inner .slowcity li.l {
  padding-top: 0;
}
.intro__inner .slowcity li.w, .intro__inner .slowcity li.w3 {
  padding-bottom: 4.5vw;
}
.intro__inner .slowcity li.c2 {
  justify-content: space-between;
}
.intro__inner .slowcity li.c2 span:nth-child(1) {
  margin-bottom: 2vw;
}
.intro__inner .slowcity li.i {
  padding-top: 2.5vw;
}
.intro__inner .slowcity li.i span:nth-child(1) {
  height: 2.3vw;
  margin-bottom: 1.2vw;
  flex-grow: initial;
}
.intro__inner .slowcity li.t {
  padding-top: 0;
}
.intro__inner .slowcity li.t2 {
  justify-content: space-between;
}
.intro__inner .slowcity li.t2 span {
  height: 2.5vw;
  flex-grow: initial;
}
.intro__inner .slowcity li.y {
  padding-bottom: 4vw;
}
.intro__inner .slowcity li.y2 {
  padding-bottom: 0;
}

html,
body,
h1 {
  padding: 0;
  margin: 0;
  font-family: "Montserrat", sans-serif;
}

#app {
  background: rgb(10, 10, 10);
  height: 100vh;
  width: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(rgba(10, 10, 10, 0.6), rgba(0, 0, 0, 0.9)), repeating-linear-gradient(0, transparent, transparent 2px, black 3px, black 3px), url("https://images.unsplash.com/photo-1506399558188-acca6f8cbf41?ixlib=rb-0.3.5&q=85&fm=jpg&crop=entropy&cs=srgb&ixid=eyJhcHBfaWQiOjE0NTg5fQ&s=7118759521e3184778a3b5e010e202c6");
  background-size: cover;
  background-position: center;
  z-index: 1;
}

#wrapper {
  text-align: center;
}

.sub {
  color: rgb(100, 220, 220);
  letter-spacing: 1em;
}

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  color: white;
  font-size: 4em;
  letter-spacing: 0.5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #ff00c1;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}

@keyframes glitch-anim {
  0% {
    clip: rect(71px, 9999px, 9px, 0);
    transform: skew(0.39deg);
  }
  5% {
    clip: rect(68px, 9999px, 33px, 0);
    transform: skew(0.77deg);
  }
  10% {
    clip: rect(33px, 9999px, 35px, 0);
    transform: skew(0.51deg);
  }
  15% {
    clip: rect(65px, 9999px, 17px, 0);
    transform: skew(0.47deg);
  }
  20% {
    clip: rect(13px, 9999px, 44px, 0);
    transform: skew(0.31deg);
  }
  25% {
    clip: rect(57px, 9999px, 92px, 0);
    transform: skew(0.24deg);
  }
  30% {
    clip: rect(15px, 9999px, 28px, 0);
    transform: skew(0.04deg);
  }
  35% {
    clip: rect(24px, 9999px, 28px, 0);
    transform: skew(0.27deg);
  }
  40% {
    clip: rect(6px, 9999px, 16px, 0);
    transform: skew(0.02deg);
  }
  45% {
    clip: rect(76px, 9999px, 60px, 0);
    transform: skew(0.87deg);
  }
  50% {
    clip: rect(14px, 9999px, 56px, 0);
    transform: skew(0.57deg);
  }
  55% {
    clip: rect(82px, 9999px, 52px, 0);
    transform: skew(0.56deg);
  }
  60% {
    clip: rect(65px, 9999px, 73px, 0);
    transform: skew(0.17deg);
  }
  65% {
    clip: rect(62px, 9999px, 11px, 0);
    transform: skew(0.61deg);
  }
  70% {
    clip: rect(35px, 9999px, 71px, 0);
    transform: skew(0.23deg);
  }
  75% {
    clip: rect(17px, 9999px, 32px, 0);
    transform: skew(0.04deg);
  }
  80% {
    clip: rect(57px, 9999px, 34px, 0);
    transform: skew(0.87deg);
  }
  85% {
    clip: rect(27px, 9999px, 29px, 0);
    transform: skew(0.47deg);
  }
  90% {
    clip: rect(75px, 9999px, 12px, 0);
    transform: skew(0.83deg);
  }
  95% {
    clip: rect(96px, 9999px, 66px, 0);
    transform: skew(0.01deg);
  }
  100% {
    clip: rect(97px, 9999px, 90px, 0);
    transform: skew(0.93deg);
  }
}
@keyframes glitch-anim2 {
  0% {
    clip: rect(4px, 9999px, 7px, 0);
    transform: skew(0.95deg);
  }
  5% {
    clip: rect(97px, 9999px, 98px, 0);
    transform: skew(0.56deg);
  }
  10% {
    clip: rect(6px, 9999px, 28px, 0);
    transform: skew(0.9deg);
  }
  15% {
    clip: rect(15px, 9999px, 76px, 0);
    transform: skew(0.13deg);
  }
  20% {
    clip: rect(18px, 9999px, 64px, 0);
    transform: skew(0.23deg);
  }
  25% {
    clip: rect(61px, 9999px, 77px, 0);
    transform: skew(0.07deg);
  }
  30% {
    clip: rect(11px, 9999px, 93px, 0);
    transform: skew(0.7deg);
  }
  35% {
    clip: rect(64px, 9999px, 24px, 0);
    transform: skew(0.6deg);
  }
  40% {
    clip: rect(16px, 9999px, 28px, 0);
    transform: skew(0.69deg);
  }
  45% {
    clip: rect(39px, 9999px, 55px, 0);
    transform: skew(0.89deg);
  }
  50% {
    clip: rect(61px, 9999px, 82px, 0);
    transform: skew(0.57deg);
  }
  55% {
    clip: rect(39px, 9999px, 66px, 0);
    transform: skew(0.1deg);
  }
  60% {
    clip: rect(88px, 9999px, 77px, 0);
    transform: skew(0.15deg);
  }
  65% {
    clip: rect(49px, 9999px, 51px, 0);
    transform: skew(0.76deg);
  }
  70% {
    clip: rect(63px, 9999px, 78px, 0);
    transform: skew(0.24deg);
  }
  75% {
    clip: rect(49px, 9999px, 67px, 0);
    transform: skew(0.3deg);
  }
  80% {
    clip: rect(90px, 9999px, 45px, 0);
    transform: skew(0.41deg);
  }
  85% {
    clip: rect(29px, 9999px, 6px, 0);
    transform: skew(0.68deg);
  }
  90% {
    clip: rect(70px, 9999px, 47px, 0);
    transform: skew(0.65deg);
  }
  95% {
    clip: rect(61px, 9999px, 88px, 0);
    transform: skew(0.76deg);
  }
  100% {
    clip: rect(89px, 9999px, 7px, 0);
    transform: skew(0.2deg);
  }
}
@keyframes glitch-skew {
  0% {
    transform: skew(-2deg);
  }
  10% {
    transform: skew(2deg);
  }
  20% {
    transform: skew(-3deg);
  }
  30% {
    transform: skew(0deg);
  }
  40% {
    transform: skew(5deg);
  }
  50% {
    transform: skew(-2deg);
  }
  60% {
    transform: skew(-2deg);
  }
  70% {
    transform: skew(4deg);
  }
  80% {
    transform: skew(5deg);
  }
  90% {
    transform: skew(-4deg);
  }
  100% {
    transform: skew(-4deg);
  }
}/*# sourceMappingURL=style.css.map */